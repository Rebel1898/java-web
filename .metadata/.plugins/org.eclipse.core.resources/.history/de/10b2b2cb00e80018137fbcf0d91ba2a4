package com.sls.database;

import java.util.ArrayList;
import com.sls.models.Room;
import com.sls.models.Usuario;

public class DBDD {

	public ArrayList<Usuario> usuarios = new ArrayList<Usuario>();

	public ArrayList<Room> habitaciones = new ArrayList<Room>();

	public DBDD() {

		this.fillUsuarios();

		this.fillhabitaciones();

		this.relacionarUSerHab();

	}

	private boolean fillUsuarios() {

		usuarios.add(new Usuario(0, "pepito", "pepitopalotes@gmail.com", null,"1a1"));

		usuarios.add(new Usuario(1, "luista", "luisalotes@gmail.com", null,"2a2"));

		usuarios.add(new Usuario(2, "Peter Parker", "peterparker@gmail.com", null,"3a3"));

		return true;

	}

	private boolean fillhabitaciones() {

		habitaciones.add(new Room(101, "Gran via 59", 200));

		habitaciones.add(new Room(202, "Paseo de la Castellana 62", 280));

		habitaciones.add(new Room(303, "Calle Princesa 31", 300));

		return true;

	}

	private boolean relacionarUSerHab() {

		usuarios.get(0).setRoom(habitaciones.get(2));

		usuarios.get(1).setRoom(habitaciones.get(1));

		usuarios.get(2).setRoom(habitaciones.get(0));

		return true;

	}

	/*
	 * Metodo que en funcion del id, devuelve un objeto usuario concreto Si no
	 * existe devuelve null
	 */
	public Usuario getUsuariobyid(int id) {

		Usuario usuarioadevolver = null;

		for (Usuario unUsuario : usuarios) {
			if (unUsuario.getId() == id) {
				usuarioadevolver = unUsuario;
				break;
			}

		}

		return usuarioadevolver;

	}
	
	public Room getHabitacionbyhid(int hid) {

		Room habitacionadevolver = null;

		for (Room unaHabitacion : habitaciones) {
			if (unaHabitacion.getHid() == hid) {
				habitacionadevolver = unaHabitacion;
				break;
			}

		}

		return habitacionadevolver;

	}

	public boolean dameusuariopormailypass(String emailr, String passwordr) {
		boolean existeusuario=false;

		for (Usuario unUsuario : usuarios) {
			if ((unUsuario.getEmail() == emailr)&&(unUsuario.getPassword() == passwordr)) {
				existe=true;
				
				return true;
			}
			
			else {break;}    

		}
		return false;


		
	}
	
	
	
	
	
	
	
	
	
}